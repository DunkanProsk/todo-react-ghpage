{"version":3,"sources":["Todo/TodoItem.js","Todo/TodoList.js","Todo/AddTodo.js","Todo/TodoFilter.js","App.js","serviceWorker.js","index.js"],"names":["styles","body__span","display","justifyContent","alignItems","span__chechbox","marginTop","marginRight","textDecoration","body__li","padding","border","borderRadius","background","marginBottom","transition","button","outline","TodoItem","props","classes","todo","completed","push","style","className","join","type","checked","onChange","id","title","onClick","removeTodo","body__ul","listStyle","margin","TodoList","map","index","filter","key","onToggle","body__form","body__input","fontSize","backgroundColor","textShadow","width","boxSizing","appearance","body__button","AddTodo","useState","value","setValue","onSubmit","event","preventDefault","trim","onCreate","target","body__filter","fontFamily","color","cursor","fontWeight","TodoFilter","App","body","body__title","body__text","textAlign","state","todoList","toggleTodo","bind","addTodo","checkFilter","newTodos","this","setState","concat","Date","now","document","querySelector","val","i","length","valActive","valComp","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8ec8ddf3.chunk.js","sourcesContent":["import React from \"react\"\n\nconst styles = {\n    body__span: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n\n    span__chechbox: {\n        marginTop: '0',\n        marginRight: '1rem',\n        textDecoration: 'line-through',\n    },\n\n    body__li: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        padding: '1rem 1rem',\n        border: '0px solid',\n        borderRadius: '15px',\n        background: '#EBECF0',\n        marginBottom: '1.5rem',\n        transition: '0.4s',\n    },\n\n    button: {\n        outline: 'none',\n    },\n};\n\nexport default function TodoItem(props) {\n    const classes = [];\n\n    if(props.todo.completed) {\n        classes.push('done');\n    };\n\n    return (\n    <li style={styles.body__li}>\n        <span className={classes.join(' ')} style={styles.body__span}>\n            <input \n                type='checkbox'\n                checked={props.todo.completed}\n                style={styles.span__chechbox}\n                onChange={() => props.onChange(props.todo.id)}\n            />\n            { props.todo.title }  \n        </span>\n\n        <button \n        className='body__button--remove' \n        onClick={() => {props.removeTodo(props.todo.id)}}\n        >&times;</button>\n    </li>\n    )\n}","import React from 'react';\nimport TodoItem from './TodoItem';\nimport { render } from '@testing-library/react';\n\nconst styles = {\n    body__ul: {\n        listStyle: 'none',\n        margin: 0,\n        padding: 0,\n    },\n};\n\nexport default function TodoList(props) {\n    return (\n        <ul style={styles.body__ul}>\n            {props.todo.map((todo, index) => {\n                if(props.filter === 1) {\n                    return <TodoItem \n                        removeTodo={props.removeTodo}\n                        todo={todo}\n                        filter={props.filter}\n                        key={todo.id}\n                        index={index}\n                        onChange={props.onToggle}\n                    />\n                };\n\n                if(props.filter === 2) {\n                    if(todo.completed === false) {\n                        return <TodoItem \n                            removeTodo={props.removeTodo}\n                            todo={todo}\n                            filter={props.filter}\n                            key={todo.id}\n                            index={index}\n                            onChange={props.onToggle}\n                        />\n                    };\n                };\n                \n                if(props.filter === 3) {\n                    if(todo.completed === true) {\n                        return <TodoItem \n                            removeTodo={props.removeTodo}\n                            todo={todo}\n                            filter={props.filter}\n                            key={todo.id}\n                            index={index}\n                            onChange={props.onToggle}\n                        />\n                    };\n                };\n            }) }\n        </ul>\n    );\n};","import React, {useState} from 'react'\n\nconst styles = {\n    body__form: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginBottom: '20px',\n    },\n\n    body__input: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        border: '0',\n        outline: '0',\n        fontSize: '16px',\n        borderRadius: '15px',\n        padding: '16px',\n        marginRight: '20px',\n        backgroundColor: '#EBECF0',\n        textShadow: '1px 1px 0 #ffffff',\n        width: '80%',\n        boxSizing: 'border-box',\n        transition: 'all 0.2s ease-in-out',\n        appearance: 'none',\n    },\n\n    body__button: {\n        border: '0',\n        outline: '0',\n        fontSize: '16px',\n        borderRadius: '15px',\n        padding: '16px',\n        borderRadius: '15px',\n        backgroundColor: '#EBECF0',\n        textShadow: '1px 1px 0 #ffffff',\n        width: '15%',\n        boxSizing: 'border-box',\n        transition: 'all 0.2s ease-in-out',\n        appearance: 'none',\n        color: '#61677C',\n        fontWeight: 'bold',\n        transition: 'all 0.2s ease-in-out',\n        cursor: 'pointer',\n        fontWeight: '600',\n    },\n};\n\nfunction AddTodo(props) {\n    const [value, setValue] = useState('');\n\n    function submitHandler(event) {\n        event.preventDefault();\n\n        if(value.trim()) {\n            props.onCreate(value);\n            setValue('');\n        };\n    };\n\n    return (\n        <form style={styles.body__form} onSubmit={submitHandler}>\n            <input\n                value={value}\n                onChange={event => setValue(event.target.value)}\n                style={styles.body__input}\n                className='body__input'\n            />\n            <button\n                type='submit'\n                style={styles.body__button}\n                className='body__button'\n            >ADD</button>\n        </form>\n    );\n};\n\nexport default AddTodo","import React from \"react\"\n\nconst styles = {\n    body__filter: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n\n    body__button: {\n        fontFamily: 'Comfortaa, cursive',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        margin: '10px  30px',\n        border: '0',\n        outline: '0',\n        fontSize: '12px',\n        padding: '12px',\n        borderRadius: '12px',\n        backgroundColor: '#EBECF0',\n        textShadow: '1px 1px 0 #ffffff',\n        width: '15%',\n        boxSizing: 'border-box',\n        appearance: 'none',\n        color: '#61677C',\n        transition: 'all 0.2s ease-in-out',\n        cursor: 'pointer',\n        fontWeight: '400',\n    },\n};\n\nexport default function TodoFilter(props) {\n    return (\n        <div style={styles.body__filter}>\n            <button \n                style={styles.body__button}\n                id='allButton'\n                className='body__buttonFilAct'\n                onClick={() => {props.filter(1)}}\n                >All\n            </button>\n            <button \n                style={styles.body__button}\n                id='activeButton'\n                className='body__buttonFil'\n                onClick={() => {props.filter(2)}}\n                >Active\n            </button>\n            <button \n                style={styles.body__button}\n                id='completedButton'\n                className='body__buttonFil'\n                onClick={() => {props.filter(3)}}\n                >Completed\n            </button>\n        </div>\n    );\n}","import React from 'react';\nimport TodoList from './Todo/TodoList';\nimport AddTodo from './Todo/AddTodo';\nimport TodoFilter from './Todo/TodoFilter';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todoList: [\n        { id: 1, completed: false, title: 'buy apples' },\n        { id: 2, completed: true, title: 'buy bananas' },\n        { id: 3, completed: false, title: 'buy paper' },\n      ],\n      filter: 1,\n    };\n\n    this.toggleTodo = this.toggleTodo.bind(this);\n    this.removeTodo = this.removeTodo.bind(this);\n    this.addTodo = this.addTodo.bind(this);\n    this.checkFilter = this.checkFilter.bind(this);\n  }\n\n  styles = {\n    body: {\n      padding: \"1rem 3rem\",\n      margin: \"0 auto\",\n      width: \"600px\",\n    },\n  \n    body__title: {\n      color: '#BABECC',\n      textShadow: '1px 1px 1px #ffffff',\n      display: 'flex',\n      justifyContent: 'center',\n      fontSize: '40px',\n    },\n  \n    body__text: {\n      textAlign: 'center',\n      marginBottom: '20px',\n    },\n  }\n\n  toggleTodo(id) {\n    const newTodos = this.state.todoList.map(todo => {\n      if(todo.id === id) {\n        todo.completed = !todo.completed;\n      };\n      return todo;\n    });\n\n    this.setState({\n      todoList: newTodos\n    });\n  }\n\n  removeTodo(id) {\n    this.setState({\n      todoList: this.state.todoList.filter(todo => todo.id !== id)\n    });\n  }\n\n  addTodo(title) {\n    this.setState({\n      todoList: this.state.todoList.concat([{\n        title,\n        id: Date.now(),\n        completed: false,\n      }])\n    });\n  }\n\n  checkFilter(value) {\n    switch(value) {\n        case 1:\n            this.setState({filter: 1});\n            document.querySelector('#allButton').className = 'body__buttonFilAct';\n            document.querySelector('#activeButton').className = 'body__buttonFil';\n            document.querySelector('#completedButton').className = 'body__buttonFil';\n            break;\n        case 2:\n            this.setState({filter: 2});\n            document.querySelector('#allButton').className = 'body__buttonFil';\n            document.querySelector('#activeButton').className = 'body__buttonFilAct';\n            document.querySelector('#completedButton').className = 'body__buttonFil';\n            break;\n        case 3:\n            this.setState({filter: 3});\n            document.querySelector('#allButton').className = 'body__buttonFil';\n            document.querySelector('#activeButton').className = 'body__buttonFil';\n            document.querySelector('#completedButton').className = 'body__buttonFilAct';\n            break;\n    };\n  };\n\n\n  valComp() {\n    let val = 0;\n    for(let i = 0; i < this.state.todoList.length; i++) {\n      if (this.state.todoList[i].completed === true) ++val;\n    };\n    return val;\n  }\n\n  valActive() {\n    let val = 0;\n    for(let i = 0; i < this.state.todoList.length; i++) {\n      if (this.state.todoList[i].completed === false) ++val;\n    };\n    return val;\n  }\n\n  render() {\n    return (\n      <div style={this.styles.body}>\n        <h1 style={this.styles.body__title}>To-Do List</h1>\n        <AddTodo onCreate={this.addTodo}/>\n        <p style={this.styles.body__text}>\n          All: {this.state.todoList.length} &nbsp; &nbsp;\n          Active: {this.valActive()} &nbsp; &nbsp;\n          Completed: {this.valComp()}\n        </p>\n        {this.state.todoList.length\n          ? <TodoList\n            todo={this.state.todoList}\n            onToggle={this.toggleTodo}\n            filter={this.state.filter}\n            removeTodo={this.removeTodo}\n            /> \n          : <p style={this.styles.body__text}>no todos</p>\n        }\n        <TodoFilter todo={this.state.todoList} filter={this.checkFilter}/>\n      </div>\n    );\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}